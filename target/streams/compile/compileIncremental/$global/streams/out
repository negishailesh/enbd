[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/Users/shaileshnegi/Documents/INTERVIEW assignment/src/main/scala/com/embd/flink/sink/KafkaJsonSink.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/Users/shaileshnegi/Documents/INTERVIEW assignment/src/main/scala/com/embd/flink/source/CustomJSONDeserializationSchema.java)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/Users/shaileshnegi/Documents/INTERVIEW assignment/src/main/scala/com/embd/flink/job/TemplateJob.scala, /Users/shaileshnegi/Documents/INTERVIEW assignment/src/main/scala/com/embd/flink/source/KafkaJsonSource.scala, /Users/shaileshnegi/Documents/INTERVIEW assignment/src/main/scala/com/embd/flink/utils/ConfigHelper.scala, /Users/shaileshnegi/Documents/INTERVIEW assignment/src/main/scala/com/embd/flink/job/Job.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(com.embd.flink.source.KafkaJsonSource, com.embd.flink.job.Job, com.embd.flink.job.TemplateJob, com.embd.flink.utils.ConfigHelper, com.embd.flink.sink.KafkaJsonSink)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll sources are invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 5 sources: invalidated sources (6) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 4 Scala sources and 1 Java source to /Users/shaileshnegi/Documents/INTERVIEW assignment/target/scala-2.11/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.2.5:compile for Scala 2.11.12[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.2.5:compile for Scala 2.11.12[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 11f356b4 for Scala compiler version 2.11.12[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-target:jvm-1.8[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_221.jdk/Contents/Home/jre/classes:/Users/shaileshnegi/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.12.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/shaileshnegi/Documents/INTERVIEW assignment/target/scala-2.11/classes:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-scala_2.11/jars/flink-scala_2.11-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-core/jars/flink-core-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-annotations/jars/flink-annotations-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/com.google.code.findbugs/jsr305/jars/jsr305-1.3.9.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/force-shading/jars/force-shading-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-metrics-core/jars/flink-metrics-core-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-shaded-asm-7/jars/flink-shaded-asm-7-7.1-12.0.jar:/Users/shaileshnegi/.ivy2/cache/com.esotericsoftware.kryo/kryo/bundles/kryo-2.24.0.jar:/Users/shaileshnegi/.ivy2/cache/com.esotericsoftware.minlog/minlog/jars/minlog-1.2.jar:/Users/shaileshnegi/.ivy2/cache/org.objenesis/objenesis/jars/objenesis-2.1.jar:/Users/shaileshnegi/.ivy2/cache/commons-collections/commons-collections/jars/commons-collections-3.2.2.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.commons/commons-compress/jars/commons-compress-1.20.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-shaded-guava/jars/flink-shaded-guava-18.0-12.0.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-java/jars/flink-java-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.commons/commons-math3/jars/commons-math3-3.5.jar:/Users/shaileshnegi/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.12.jar:/Users/shaileshnegi/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.11.12.jar:/Users/shaileshnegi/.ivy2/cache/org.scala-lang.modules/scala-xml_2.11/bundles/scala-xml_2.11-1.0.5.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-streaming-scala_2.11/jars/flink-streaming-scala_2.11-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-streaming-java_2.11/jars/flink-streaming-java_2.11-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-file-sink-common/jars/flink-file-sink-common-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-runtime_2.11/jars/flink-runtime_2.11-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-queryable-state-client-java/jars/flink-queryable-state-client-java-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-shaded-netty/jars/flink-shaded-netty-4.1.49.Final-12.0.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-hadoop-fs/jars/flink-hadoop-fs-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/commons-io/commons-io/jars/commons-io-2.7.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-shaded-jackson/jars/flink-shaded-jackson-2.10.1-12.0.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-shaded-zookeeper-3/jars/flink-shaded-zookeeper-3-3.4.14-12.0.jar:/Users/shaileshnegi/.ivy2/cache/commons-cli/commons-cli/jars/commons-cli-1.3.1.jar:/Users/shaileshnegi/.ivy2/cache/org.javassist/javassist/bundles/javassist-3.24.0-GA.jar:/Users/shaileshnegi/.ivy2/cache/com.typesafe.akka/akka-actor_2.11/jars/akka-actor_2.11-2.5.21.jar:/Users/shaileshnegi/.ivy2/cache/com.typesafe/config/bundles/config-1.3.3.jar:/Users/shaileshnegi/.ivy2/cache/org.scala-lang.modules/scala-java8-compat_2.11/bundles/scala-java8-compat_2.11-0.7.0.jar:/Users/shaileshnegi/.ivy2/cache/com.typesafe.akka/akka-stream_2.11/jars/akka-stream_2.11-2.5.21.jar:/Users/shaileshnegi/.ivy2/cache/com.typesafe.akka/akka-protobuf_2.11/jars/akka-protobuf_2.11-2.5.21.jar:/Users/shaileshnegi/.ivy2/cache/org.reactivestreams/reactive-streams/jars/reactive-streams-1.0.2.jar:/Users/shaileshnegi/.ivy2/cache/com.typesafe/ssl-config-core_2.11/bundles/ssl-config-core_2.11-0.3.7.jar:/Users/shaileshnegi/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.11/bundles/scala-parser-combinators_2.11-1.1.1.jar:/Users/shaileshnegi/.ivy2/cache/com.typesafe.akka/akka-slf4j_2.11/jars/akka-slf4j_2.11-2.5.21.jar:/Users/shaileshnegi/.ivy2/cache/org.clapper/grizzled-slf4j_2.11/jars/grizzled-slf4j_2.11-1.3.2.jar:/Users/shaileshnegi/.ivy2/cache/com.github.scopt/scopt_2.11/jars/scopt_2.11-3.5.0.jar:/Users/shaileshnegi/.ivy2/cache/org.xerial.snappy/snappy-java/bundles/snappy-java-1.1.4.jar:/Users/shaileshnegi/.ivy2/cache/com.twitter/chill_2.11/jars/chill_2.11-0.7.6.jar:/Users/shaileshnegi/.ivy2/cache/com.twitter/chill-java/jars/chill-java-0.7.6.jar:/Users/shaileshnegi/.ivy2/cache/org.lz4/lz4-java/jars/lz4-java-1.6.0.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-connector-kafka-0.11_2.11/jars/flink-connector-kafka-0.11_2.11-1.11.3.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-connector-kafka-0.10_2.11/jars/flink-connector-kafka-0.10_2.11-1.11.3.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-connector-kafka-base_2.11/jars/flink-connector-kafka-base_2.11-1.11.3.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.kafka/kafka-clients/jars/kafka-clients-0.11.0.2.jar:/Users/shaileshnegi/.ivy2/cache/net.jpountz.lz4/lz4/jars/lz4-1.3.0.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-statebackend-rocksdb_2.11/jars/flink-statebackend-rocksdb_2.11-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/com.data-artisans/frocksdbjni/jars/frocksdbjni-5.17.2-artisans-2.0.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-connector-filesystem_2.11/jars/flink-connector-filesystem_2.11-1.11.3.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-runtime-web_2.11/jars/flink-runtime-web_2.11-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-clients_2.11/jars/flink-clients_2.11-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-optimizer_2.11/jars/flink-optimizer_2.11-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-avro-confluent-registry/jars/flink-avro-confluent-registry-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/io.confluent/kafka-schema-registry-client/jars/kafka-schema-registry-client-5.5.2.jar:/Users/shaileshnegi/.ivy2/cache/io.confluent/common-config/jars/common-config-5.5.2.jar:/Users/shaileshnegi/.ivy2/cache/io.confluent/common-utils/jars/common-utils-5.5.2.jar:/Users/shaileshnegi/.ivy2/cache/jakarta.ws.rs/jakarta.ws.rs-api/bundles/jakarta.ws.rs-api-2.1.6.jar:/Users/shaileshnegi/.ivy2/cache/org.glassfish.jersey.core/jersey-common/jars/jersey-common-2.30.jar:/Users/shaileshnegi/.ivy2/cache/jakarta.annotation/jakarta.annotation-api/jars/jakarta.annotation-api-1.3.5.jar:/Users/shaileshnegi/.ivy2/cache/org.glassfish.hk2.external/jakarta.inject/jars/jakarta.inject-2.6.1.jar:/Users/shaileshnegi/.ivy2/cache/org.glassfish.hk2/osgi-resource-locator/jars/osgi-resource-locator-1.0.3.jar:/Users/shaileshnegi/.ivy2/cache/io.swagger/swagger-annotations/bundles/swagger-annotations-1.6.2.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-avro/jars/flink-avro-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.avro/avro/bundles/avro-1.10.0.jar:/Users/shaileshnegi/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.11.0.jar:/Users/shaileshnegi/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.30.jar:/Users/shaileshnegi/.ivy2/cache/com.github.wnameless.json/json-flattener/jars/json-flattener-0.7.1.jar:/Users/shaileshnegi/.ivy2/cache/com.eclipsesource.minimal-json/minimal-json/bundles/minimal-json-0.9.5.jar:/Users/shaileshnegi/.ivy2/cache/com.github.wnameless.json/json-base/jars/json-base-1.0.0.jar:/Users/shaileshnegi/.ivy2/cache/com.softwaremill.sttp/core_2.11/jars/core_2.11-1.7.2.jar:/Users/shaileshnegi/.ivy2/cache/org.mapdb/mapdb/bundles/mapdb-3.0.8.jar:/Users/shaileshnegi/.ivy2/cache/org.jetbrains.kotlin/kotlin-stdlib/jars/kotlin-stdlib-1.2.71.jar:/Users/shaileshnegi/.ivy2/cache/org.jetbrains.kotlin/kotlin-stdlib-common/jars/kotlin-stdlib-common-1.2.71.jar:/Users/shaileshnegi/.ivy2/cache/org.jetbrains/annotations/jars/annotations-13.0.jar:/Users/shaileshnegi/.ivy2/cache/org.eclipse.collections/eclipse-collections-api/bundles/eclipse-collections-api-7.0.0.jar:/Users/shaileshnegi/.ivy2/cache/org.eclipse.collections/eclipse-collections/bundles/eclipse-collections-7.0.0.jar:/Users/shaileshnegi/.ivy2/cache/org.eclipse.collections/eclipse-collections-forkjoin/bundles/eclipse-collections-forkjoin-7.0.0.jar:/Users/shaileshnegi/.ivy2/cache/com.google.guava/guava/bundles/guava-15.0.jar:/Users/shaileshnegi/.ivy2/cache/org.mapdb/elsa/bundles/elsa-3.0.0-M5.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.logging.log4j/log4j-api/jars/log4j-api-2.11.1.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.logging.log4j/log4j-core/jars/log4j-core-2.11.1.jar:/Users/shaileshnegi/.ivy2/cache/org.slf4j/slf4j-simple/jars/slf4j-simple-1.7.21.jar:/Users/shaileshnegi/.ivy2/cache/org.json4s/json4s-core_2.11/jars/json4s-core_2.11-3.6.2.jar:/Users/shaileshnegi/.ivy2/cache/org.json4s/json4s-ast_2.11/jars/json4s-ast_2.11-3.6.2.jar:/Users/shaileshnegi/.ivy2/cache/org.json4s/json4s-scalap_2.11/jars/json4s-scalap_2.11-3.6.2.jar:/Users/shaileshnegi/.ivy2/cache/com.thoughtworks.paranamer/paranamer/bundles/paranamer-2.8.jar:/Users/shaileshnegi/.ivy2/cache/org.json4s/json4s-native_2.11/jars/json4s-native_2.11-3.6.2.jar:/Users/shaileshnegi/.ivy2/cache/org.json4s/json4s-jackson_2.11/jars/json4s-jackson_2.11-3.6.2.jar:/Users/shaileshnegi/.ivy2/cache/com.spatial4j/spatial4j/bundles/spatial4j-0.5.jar:/Users/shaileshnegi/.ivy2/cache/io.github.openfeign/feign-core/jars/feign-core-11.0.jar:/Users/shaileshnegi/.ivy2/cache/io.github.openfeign/feign-jackson/jars/feign-jackson-11.0.jar:/Users/shaileshnegi/.ivy2/cache/com.maxmind.db/maxmind-db/jars/maxmind-db-1.4.0.jar:/Users/shaileshnegi/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.11.0.jar:/Users/shaileshnegi/.ivy2/cache/com.fasterxml.jackson.core/jackson-annotations/bundles/jackson-annotations-2.11.0.jar:/Users/shaileshnegi/.ivy2/cache/redis.clients/jedis/jars/jedis-3.3.0.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.commons/commons-pool2/jars/commons-pool2-2.6.2.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.flink/flink-s3-fs-hadoop/jars/flink-s3-fs-hadoop-1.12.1.jar:/Users/shaileshnegi/.ivy2/cache/com.redislabs/jrebloom/jars/jrebloom-2.0.0-m2.jar:/Users/shaileshnegi/.ivy2/cache/com.google.code.gson/gson/jars/gson-2.8.0.jar:/Users/shaileshnegi/.ivy2/cache/junit/junit/jars/junit-4.12.jar:/Users/shaileshnegi/.ivy2/cache/org.hamcrest/hamcrest-core/jars/hamcrest-core-1.3.jar:/Users/shaileshnegi/.ivy2/cache/nl.basjes.parse.useragent/yauaa/jars/yauaa-5.22.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.httpcomponents.client5/httpclient5/jars/httpclient5-5.0.3.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.httpcomponents.core5/httpcore5/jars/httpcore5-5.0.2.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.httpcomponents.core5/httpcore5-h2/jars/httpcore5-h2-5.0.2.jar:/Users/shaileshnegi/.ivy2/cache/commons-codec/commons-codec/jars/commons-codec-1.13.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.commons/commons-text/jars/commons-text-1.9.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.commons/commons-lang3/jars/commons-lang3-3.11.jar:/Users/shaileshnegi/.ivy2/cache/org.apache.commons/commons-collections4/jars/commons-collections4-4.4.jar:/Users/shaileshnegi/.ivy2/cache/nl.basjes.collections/prefixmap/jars/prefixmap-2.0.jar:/Users/shaileshnegi/.ivy2/cache/org.slf4j/slf4j-log4j12/jars/slf4j-log4j12-1.7.7.jar:/Users/shaileshnegi/.ivy2/cache/log4j/log4j/bundles/log4j-1.2.17.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 15.337778334 s[0m
[0m[[0m[0mdebug[0m] [0m[0mAttempting to call com.sun.tools.javac.api.JavacTool@6227f165 directly...[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation took 2.742166836 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava analysis took 0.362454538 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation + analysis took 3.132051487 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.embd.flink.job.Job...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.embd.flink.job.Job)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.embd.flink.job.Job)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.embd.flink.job.Job,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(com;embd;flink;job;Job;init;,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(createStreamEnv,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(addRocksDBStateBackend,[Default]), UsedName(equals,[Default]), UsedName(createStreamEnv$default$4,[Default]), UsedName(toString,[Default]), UsedName(main,[Default]), UsedName($asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Job,[Default]), UsedName(hashCode,[Default]), UsedName(createStreamEnv$default$3,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The com.embd.flink.job.Job has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(com;embd;flink;job;Job;init;,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(createStreamEnv,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(addRocksDBStateBackend,[Default]), UsedName(equals,[Default]), UsedName(createStreamEnv$default$4,[Default]), UsedName(toString,[Default]), UsedName(main,[Default]), UsedName($asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Job,[Default]), UsedName(hashCode,[Default]), UsedName(createStreamEnv$default$3,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.embd.flink.job.Job)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.embd.flink.sink.KafkaJsonSink...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.embd.flink.sink.KafkaJsonSink)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.embd.flink.sink.KafkaJsonSink)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.embd.flink.sink.KafkaJsonSink,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(KafkaJsonSink,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(com;embd;flink;sink;KafkaJsonSink;init;,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The com.embd.flink.sink.KafkaJsonSink has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(eq,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(KafkaJsonSink,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName($asInstanceOf,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(notifyAll,[Default]), UsedName(com;embd;flink;sink;KafkaJsonSink;init;,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.embd.flink.sink.KafkaJsonSink)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.embd.flink.source.KafkaJsonSource...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.embd.flink.source.KafkaJsonSource)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.embd.flink.source.KafkaJsonSource)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.embd.flink.source.KafkaJsonSource,ModifiedNames(changes = UsedName(buildConsumer,[Default]), UsedName(com;embd;flink;source;KafkaJsonSource;init;,[Default]), UsedName(buildConsumer$default$1,[Default]))) invalidates 1 classes due to The com.embd.flink.source.KafkaJsonSource has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(buildConsumer,[Default]), UsedName(com;embd;flink;source;KafkaJsonSource;init;,[Default]), UsedName(buildConsumer$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.embd.flink.source.KafkaJsonSource)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.embd.flink.source.CustomJSONDeserializationSchema...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.embd.flink.source.CustomJSONDeserializationSchema)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.embd.flink.source.CustomJSONDeserializationSchema)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of com.embd.flink.source.KafkaJsonSource: Set(UsedName(com;embd;flink;source;CustomJSONDeserializationSchema;init;,[Default]), UsedName(CustomJSONDeserializationSchema,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.embd.flink.source.CustomJSONDeserializationSchema,ModifiedNames(changes = UsedName(isEndOfStream,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(deserialize,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(com;embd;flink;source;CustomJSONDeserializationSchema;init;,[Default]), UsedName(open,[Default]), UsedName(getProducedType,[Default]), UsedName(hashCode,[Default]), UsedName(CustomJSONDeserializationSchema,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]))) invalidates 2 classes due to The com.embd.flink.source.CustomJSONDeserializationSchema has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(isEndOfStream,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(deserialize,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(com;embd;flink;source;CustomJSONDeserializationSchema;init;,[Default]), UsedName(open,[Default]), UsedName(getProducedType,[Default]), UsedName(hashCode,[Default]), UsedName(CustomJSONDeserializationSchema,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.embd.flink.source.CustomJSONDeserializationSchema)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(com.embd.flink.source.KafkaJsonSource)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
